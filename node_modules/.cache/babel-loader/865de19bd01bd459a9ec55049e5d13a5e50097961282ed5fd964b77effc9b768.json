{"ast":null,"code":"var _jsxFileName = \"/Users/mihailsarenko/Desktop/color_generator/src/SingleColor.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport rgbToHex from './utils';\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SingleColor = ({\n  color,\n  index\n}) => {\n  const {\n    hex,\n    weight\n  } = color;\n  const saveToClipboard = async () => {\n    if (navigator.clipboard) {\n      await navigator.clipboard.writeText();\n    } else {\n      toast.error('Clipboard access not available');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: index > 10 ? 'color color-light' : 'color',\n    style: {\n      background: `#${hex}`\n    },\n    onClick: saveToClipboard,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"percent-value\",\n      children: [weight, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"color-value\",\n      children: [\"#\", hex]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n};\n_c = SingleColor;\nexport default SingleColor;\nvar _c;\n$RefreshReg$(_c, \"SingleColor\");","map":{"version":3,"names":["React","useState","useEffect","rgbToHex","toast","jsxDEV","_jsxDEV","SingleColor","color","index","hex","weight","saveToClipboard","navigator","clipboard","writeText","error","className","style","background","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mihailsarenko/Desktop/color_generator/src/SingleColor.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport rgbToHex from './utils'\nimport {toast} from \"react-toastify\";\n\nconst SingleColor = ({color, index}) => {\n  const {hex, weight} = color;\n  const saveToClipboard = async() => {\n    if (navigator.clipboard) {\n      await navigator.clipboard.writeText();\n    } else {\n      toast.error('Clipboard access not available');\n    }\n  };\n\n  return <article\n      className={index > 10 ? 'color color-light':'color'}\n      style={{background:`#${hex}`}}\n      onClick={saveToClipboard}\n  >\n    <p className='percent-value'>{weight}%</p>\n    <p className='color-value'>#{hex}</p>\n  </article>\n}\n\nexport default SingleColor\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,SAAS;AAC9B,SAAQC,KAAK,QAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,WAAW,GAAGA,CAAC;EAACC,KAAK;EAAEC;AAAK,CAAC,KAAK;EACtC,MAAM;IAACC,GAAG;IAAEC;EAAM,CAAC,GAAGH,KAAK;EAC3B,MAAMI,eAAe,GAAG,MAAAA,CAAA,KAAW;IACjC,IAAIC,SAAS,CAACC,SAAS,EAAE;MACvB,MAAMD,SAAS,CAACC,SAAS,CAACC,SAAS,CAAC,CAAC;IACvC,CAAC,MAAM;MACLX,KAAK,CAACY,KAAK,CAAC,gCAAgC,CAAC;IAC/C;EACF,CAAC;EAED,oBAAOV,OAAA;IACHW,SAAS,EAAER,KAAK,GAAG,EAAE,GAAG,mBAAmB,GAAC,OAAQ;IACpDS,KAAK,EAAE;MAACC,UAAU,EAAC,IAAIT,GAAG;IAAE,CAAE;IAC9BU,OAAO,EAAER,eAAgB;IAAAS,QAAA,gBAE3Bf,OAAA;MAAGW,SAAS,EAAC,eAAe;MAAAI,QAAA,GAAEV,MAAM,EAAC,GAAC;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC1CnB,OAAA;MAAGW,SAAS,EAAC,aAAa;MAAAI,QAAA,GAAC,GAAC,EAACX,GAAG;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AACZ,CAAC;AAAAC,EAAA,GAlBKnB,WAAW;AAoBjB,eAAeA,WAAW;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}